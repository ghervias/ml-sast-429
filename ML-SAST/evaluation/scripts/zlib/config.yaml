---
general:
  project: "zlib" # Unique title of the project under analysis
  source: ./code
  loglevel: DEBUG

svf:
  graphs:
    - tldg
    - icfg
    - svfg
    - ptacg
  options:
    versioning_threads: 7
    precise_analysis: true
  binary: entrypoint
  delete: true

neo4j:
  host: localhost
  port: 7687
  user: neo4j
  pass: ml-sast
  delete: true
  memory:
    dbms.memory.heap.initial_size: 5100m
    dbms.memory.heap.max_size: 5100m
    dbms.memory.pagecache.size: 2900m
    dbms.memory.off_heap.max_size: 4000m
  prepare: |
           // INIT DATABASE
           CALL mlsast.prepare.generateLabels();
           CALL mlsast.prepare.generateIndeces();
           CALL mlsast.prepare.connectGraphs();
           CALL mlsast.prepare.makeRelationships();
           CALL mlsast.prepare.setIcfgProps();
           CALL mlsast.prepare.buildIcfgPhis();
  query: |
         // Get list of procedures in program.
         CALL mlsast.util.listProcedures()
         YIELD str AS f

         // Find call sites for procedures.
         WITH f
         MATCH (n:FunEntryICFGNode {func_name: f})

         // Find exit nodes for same procedures.
         WITH f, n
         MATCH (m:FunExitICFGNode {func_name: f})

         // Find unique paths between call sites and exit points.
         WITH f, n, collect(m) AS exits
           CALL apoc.path.expandConfig(n, {
               relationshipFilter: "icfg>",
               terminatorNodes: exits,
               uniqueness: "NODE_LEVEL",
               maxLevel: 75
           })

           YIELD path

         // Return name of the procedure (f) and the associated paths (path).
         RETURN f, path;

distance:
  model_path: models/juliet.zip
  node_property: node_type
  threshold_factor: 1     # Tamper with threshold factor
  centroids: bad          # Measure distance to good center or bad center
  clustering_type: kmeans # Algorithm to find initial centroids
  expected_clusters: 8   # number of centroids to find
  threshold_scaling: 1    # factor to scale the optimal threshold
  include_models: all     # Include list may be list of models or string "all"
#  include_models:     # Include list may be list of models or string "all"
#    - CWE-122
#    - CWE-690
#  exclude_models:
#    - CWE-196             # Exclude list is a list of model name strings
  source_code_delta: 4    # number of lines that should be extracted around a
                          #   node on a path
